# Всякие общие настройки для начала
#ServerRoot "/usr/local"
Listen              localhost:<%= scope.lookupvar('webserver::params::apache_port') %>
NameVirtualHost     localhost:<%= scope.lookupvar('webserver::params::apache_port') %>
ServerAdmin <%= scope.lookupvar('webserver::params::apache_server_admin') %>
ServerName localhost:<%= scope.lookupvar('webserver::params::apache_port') %>
ErrorLog <%= scope.lookupvar('webserver::params::apache_service_log_path') %>error.log
LogLevel warn
# Disable hostname lookups for improve performance
# Выключаем поиск хостов в DNS для улучшения производительности
HostnameLookups     off
# For security reasons disabling apache version
# Выключаем свечение версии апача и всяких других параметров в интырнеты
ServerSignature     Off
ServerTokens        Prod
TraceEnable         Off
# Adjusting keep-alive setting (KeepAlive MUST be turn on, oterwise performance is decreasing dramatically)
# Включаем KeepAlive. С ним надо играться. Без него производительность сильно падает.
KeepAlive               <%= scope.lookupvar('webserver::params::apache_keep_alive') %>
KeepAliveTimeout        <%= scope.lookupvar('webserver::params::apache_keep_alive_timeout') %>
MaxKeepAliveRequests    <%= scope.lookupvar('webserver::params::apache_keep_alive_requests') %>

# Loading necessary modules
# Загрузка необходимых модулей

# For Allow/Deny directives http://httpd.apache.org/docs/2.2/mod/mod_authz_host.html
LoadModule authz_host_module    <%= apache_service_modules_dir %>mod_authz_host.so

LoadModule mime_module          <%= apache_service_modules_dir %>mod_mime.so

LoadModule vhost_alias_module   <%= apache_service_modules_dir %>mod_vhost_alias.so

LoadModule dir_module           <%= apache_service_modules_dir %>mod_dir.so

LoadModule actions_module       <%= apache_service_modules_dir %>mod_actions.so

LoadModule alias_module         <%= apache_service_modules_dir %>mod_alias.so

LoadModule rewrite_module       <%= apache_service_modules_dir %>mod_rewrite.so

LoadModule status_module        <%= apache_service_modules_dir %>mod_status.so

LoadModule info_module          <%= apache_service_modules_dir %>mod_info.so

LoadModule cgi_module           <%= apache_service_modules_dir %>mod_cgi.so

LoadModule rpaf_module          <%= apache_service_modules_dir %>mod_rpaf.so

LoadModule php5_module          <%= apache_service_modules_dir %>libphp5.so

LoadFile /usr/lib/libxml2.so.2

LoadModule security2_module     <%= apache_service_modules_dir %>mod_security2.so

LoadModule unique_id_module     <%= apache_service_modules_dir %>mod_unique_id.so

<IfModule mod_security2.c>
    # Basic configuration options
    SecRuleEngine On
    SecRequestBodyAccess On
    SecResponseBodyAccess Off
    
    # PCRE Tuning
    SecPcreMatchLimit 1000000
    SecPcreMatchLimitRecursion 1000000
    
    # Handling of file uploads
    # TODO Choose a folder private to Apache.
    # SecUploadDir /opt/apache-frontend/tmp/
    SecUploadKeepFiles Off
    SecUploadFileLimit 10
    
    # Debug log
    SecDebugLog <%= scope.lookupvar('webserver::params::apache_service_log_path') %>modsec_debug.log
    SecDebugLogLevel 0

    # Serial audit log
    SecAuditEngine RelevantOnly
    SecAuditLogRelevantStatus ^5
    SecAuditLogParts ABIFHZ
    SecAuditLogType Serial
    SecAuditLog <%= scope.lookupvar('webserver::params::apache_service_log_path') %>modsec_audit.log
    SecDataDir /var/www/tmp 
    # Maximum request body size we will
    # accept for buffering
    #SecRequestBodyLimit 131072
    
    # Store up to 128 KB in memory
    #SecRequestBodyInMemoryLimit 131072
    
    # Buffer response bodies of up to
    # 512 KB in length
    #SecResponseBodyLimit 524288
    
    # Verify that we've correctly processed the request body.
    # As a rule of thumb, when failing to process a request body
    # you should reject the request (when deployed in blocking mode)
    # or log a high-severity alert (when deployed in detection-only mode).
    SecRule REQBODY_PROCESSOR_ERROR "!@eq 0" \
    "phase:2,t:none,log,deny,msg:'Failed to parse request body.',severity:2"
    
    # By default be strict with what we accept in the multipart/form-data
    # request body. If the rule below proves to be too strict for your
    # environment consider changing it to detection-only. You are encouraged
    # _not_ to remove it altogether.
    SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
    "phase:2,t:none,log,deny,msg:'Multipart request body \
    failed strict validation: \
    PE %{REQBODY_PROCESSOR_ERROR}, \
    BQ %{MULTIPART_BOUNDARY_QUOTED}, \
    BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
    DB %{MULTIPART_DATA_BEFORE}, \
    DA %{MULTIPART_DATA_AFTER}, \
    HF %{MULTIPART_HEADER_FOLDING}, \
    LF %{MULTIPART_LF_LINE}, \
    SM %{MULTIPART_SEMICOLON_MISSING}, \
    IQ %{MULTIPART_INVALID_QUOTING}, \
    IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
    IH %{MULTIPART_FILE_LIMIT_EXCEEDED}'"
    
    # Did we see anything that might be a boundary?
    #SecRule MULTIPART_UNMATCHED_BOUNDARY "!@eq 0" \
    #"phase:2,t:none,log,deny,msg:'Multipart parser detected a possible unmatched boundary.'"
    
    # Some internal errors will set flags in TX and we will need to look for these.
    # All of these are prefixed with "MSC_".  The following flags currently exist:
    #
    # MSC_PCRE_LIMITS_EXCEEDED: PCRE match limits were exceeded.
    #
    SecRule TX:/^MSC_/ "!@streq 0" \
            "phase:2,t:none,deny,msg:'ModSecurity internal error flagged: %{MATCHED_VAR_NAME}'"

    Include modsecurity.d/*.conf
</IfModule>

AddType application/x-httpd-php .php

<ifModule mod_rpaf.c>
    # Rpaf for showing external client ip except nginx ip

    # Устанвливает REMOTE_ADDR так, чтобы он не был адресом прокси
    # т.е. получается реальный IP клиента.

    # В этом конфиге лучше указать все имеющие адреса прокси, как
    # мне кажется, чтобы не указывать для каждого хоста в отдельности

    # Указаниe подсети НЕ поддерживается. Хотя в каких-то новых версиях
    # вроде бы поддержка появилась, но мы ведь используем только
    # стабильные версии!
    RPAFenable              On
    RPAFsethostname         On
    RPAFproxy_ips           127.0.0.1 10.1.0.1
</ifModule>
<IfModule !mpm_netware_module>
    <IfModule !mpm_winnt_module>
        User    <%= scope.lookupvar('webserver::params::apache_service_user') %>
        Group   <%= scope.lookupvar('webserver::params::apache_service_group') %>
    </IfModule>
</IfModule>

<FilesMatch "^\.">
    # Закрываем .htaccess .htpasswd и прочие скрытые
    # от посторонних глаз.
    Order allow,deny
    Deny from all
    Satisfy All
</FilesMatch>

<IfModule log_config_module>
    
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    CustomLog <%= scope.lookupvar('webserver::params::apache_service_log_path') %>access.log combined
</IfModule>

DefaultType text/plain

<IfModule mime_module>
    TypesConfig <%= scope.lookupvar('webserver::params::apache_service_mime_types') %>
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
</IfModule>

# Config mod_status module
<IfModule mod_status.c>
    ExtendedStatus On
</IfModule>

####################################
# Virtual Hosts                    #
####################################
<VirtualHost localhost:<%= scope.lookupvar('webserver::params::apache_port') %>>
    # Default virtaul host (if domain name is not matched with any of
    # existing vhosts)
    ServerName default
    AddDefaultCharset UTF-8
    Redirect 404 /
    ErrorDocument 404 "Page Not Found"
</VirtualHost>
<VirtualHost localhost:<%= scope.lookupvar('webserver::params::apache_port') %>>
    # Virtual host <%= fqdn %> will be used for technical services
    # such as apache statistics, profiles and some other services
    ServerName <%= fqdn %>
    ServerAlias <%= hostname %>
    <IfModule mod_status.c>
        <Location /server-status>
            SetHandler server-status
            Order deny,allow
        </Location>
    </IfModule>
    <IfModule mod_info.c>
        <Location /server-info>
            SetHandler server-info
        </Location>
    </IfModule>
    Alias /xhprof/ <%= scope.lookupvar('webserver::params::php_xhprof_path') %>xhprof_html/
    <Directory />
        Order deny,allow
        Allow from 192.168.0.0/16
        Allow from 10.0.0.0/8
        Deny from all
    </Directory>
    <Directory /xhprof>
        <IfModule mod_dir.c>
            DirectoryIndex index.php 
        </IfModule>
        Order deny,allow
        Allow from 192.168.0.0/16
        Allow from 10.0.0.0/8
        Deny from all
    </Directory>
    ScriptAlias /cgi-bin "<%= scope.lookupvar('webserver::params::php_scripts_path') %>"
</VirtualHost>
# Include all virtual hosts
Include <%= scope.lookupvar('webserver::params::apache_service_vhosts_dir') %>*.conf

